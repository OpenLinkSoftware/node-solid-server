<form id="tls" method="post" action="/login/tls">

{{#unless enablePassword }}
  <div class="form-group">
    <div class="row">
      <div class="col-md-12">
        <label for="username">Username:</label>
        <input type="text" class="form-control" name="username" id="username" placeholder="alice" />
      </div>
    </div>
  </div>
{{/unless}}
  
  <div class="form-group">

    <button type="submit" class="btn btn-primary" id="login-tls">
      With Certificate (WebId+Delegate-TLS)
    </button>

    {{> auth/auth-hidden-fields}}

  </div>
</form>

<script type="text/javascript">
  const button = document.getElementById('login-tls')
  button.addEventListener('click', function(event) {
    const username_tls = document.querySelector('#tls #username')
    const username_pwd = document.querySelector('#login_pwd #username')

    document.querySelector('#error').style.display="none"

    let uid = username_tls? username_tls.value: username_pwd.value

    event.preventDefault()

    if (uid.length === 0) {
       document.querySelector('#error').style.display='block'
       document.querySelector('#error_msg').innerText = 'Username required'
       return
    }

    fetch('/login/tls',
      { method: 'POST', 
        headers: {
          'Accept': 'text/html, text/plain, *.*',
          'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'
        },
        credentials: 'include', 
        body:'username='+uid})
     .then(function(response) {
        if (!response.ok) {
          document.querySelector('#error').style.display="block"
          document.querySelector('#error_msg').innerText = response.statusText
          return
        }
        const webId = response.headers.get('user')
        const idp = new URL(webId).origin
        const session = { authType: 'WebID-TLS', webId, idp }
        const authClientNamespace = 'solid-auth-client'
        let authClientStore
        try {
          authClientStore = JSON.parse(localStorage.getItem(authClientNamespace) || '{}')
        } catch (err) {
          authClientStore = {}
        }
        authClientStore.session = session
        localStorage.setItem(authClientNamespace, JSON.stringify(authClientStore))
        return response
     })
     .then(function(response) {
        window.location.href = response.url
     })
     .catch(function(error) {
       alert(error);
     }) 
  })
</script>
